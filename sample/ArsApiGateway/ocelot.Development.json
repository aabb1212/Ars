{
  "Routes": [
    //ArsWebApiService api
    {
      "UpstreamPathTemplate": "/Api/ArsWebApi/{url}",
      "UpstreamHttpMethod": [ "GET", "POST", "PUT", "DELETE", "OPTIONS" ],

      "DownstreamPathTemplate": "/Api/ArsWebApi/{url}",
      "DownstreamScheme": "http",

      //-- ServiceDiscovery start -- 
      "ServiceName": "arswebapiservice",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询
      },
      //-- ServiceDiscovery end -- 

      //限流
      //解释:1s的最大请求数50，若超过50，则提示请求端等待1秒后重试
      "RateLimitOptions": {
        "ClientWhitelist": [ "ars-ocelot-c1" ], //clientid白名单，不限制请求数
        "EnableRateLimiting": true, //是否启用限流
        "Period": "1s", //指定的时间间隔
        "PeriodTimespan": 1, //多少秒后重试
        "Limit": 50 //最大请求数
      },

      //超时策略+熔断策略+降级策略
      //达到30个超时请求时，服务自动熔断5s，5s后恢复正常请求
      //超时返回503
      //熔断、降级返回504
      //HttpRequestException、TimeoutRejectedException、TimeoutException、
      //HttpStatusCode >= 500 || HttpStatusCode = 408 以上会触发熔断请求计数
      "QoSOptions": {
        "ExceptionsAllowedBeforeBreaking": 30, //允许多少个异常请求
        "DurationOfBreak": 5000, // 熔断的时间，单位ms
        "TimeoutValue": 10000 //超时时间，单位ms,
      }
    },
    //ArsWebApiService swagger
    {
      "UpstreamPathTemplate": "/swagger/docs/v1/ArsWebApi",
      "UpstreamHttpMethod": [ "Get" ],

      "DownstreamPathTemplate": "/Api/ArsWebApi/swagger/v1/swagger.json",
      "DownstreamScheme": "http",

      //-- ServiceDiscovery start -- 
      "ServiceName": "arswebapiservice",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询
      },
      //-- ServiceDiscovery end -- 

      "SwaggerKey": "ArsWebApiService-SwaggerKey"
    },
    //ArsWebApiService websocket
    {
      "UpstreamPathTemplate": "/ws/webapi/{url}",
      "UpstreamHttpMethod": [ "GET", "POST", "PUT", "DELETE", "OPTIONS" ],

      "DownstreamPathTemplate": "/ws/webapi/{url}",
      "DownstreamScheme": "ws",
      "ServiceName": "arswebapiservice",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询
      }
    },

    //ArsGrpcWebApiService api
    {
      "UpstreamPathTemplate": "/Api/ArsGrpcWebApi/{url}",
      "UpstreamHttpMethod": [ "GET", "POST", "PUT", "DELETE", "OPTIONS" ],

      "DownstreamPathTemplate": "/Api/ArsGrpcWebApi/{url}",
      "DownstreamScheme": "https",

      //-- ServiceDiscovery start -- 
      "ServiceName": "apigrpcwebapiservice",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询
      },
      //-- ServiceDiscovery end -- 

      //添加https client certificate
      "DelegatingHandlers": [
        "X509CertificateDelegatingHandler"
      ]
    },
    //ArsGrpcWebApiService swagger
    {
      "UpstreamPathTemplate": "/swagger/docs/v1/ArsGrpcWebApi",
      "UpstreamHttpMethod": [ "Get" ],

      "DownstreamPathTemplate": "/Api/ArsGrpcWebApi/swagger/v1/swagger.json",
      "DownstreamScheme": "https",

      //-- ServiceDiscovery start -- 
      "ServiceName": "apigrpcwebapiservice",
      "UseServiceDiscovery": true,
      "LoadBalancerOptions": {
        "Type": "RoundRobin" //轮询
      },
      //-- ServiceDiscovery end --

      "SwaggerKey": "ArsGrpcWebApiService-SwaggerKey",

      //请求跳过https certificate校验
      "DangerousAcceptAnyServerCertificateValidator": true
    }
  ],

  //gateway swagger页面配置
  "SwaggerEndPoints": [
    {
      "Key": "ArsWebApiService-SwaggerKey",
      "Config": [
        {
          "Name": "GateWay-ArsWebApiService",
          "Version": "v1",

          //ServiceDiscovery获取host
          "Service": {
            "Name": "arswebapiservice",
            "Path": "/Api/ArsWebApi/swagger/v1/swagger.json"
          }
        }
      ],
      "TransformByOcelotConfig": false
    },
    {
      "Key": "ArsGrpcWebApiService-SwaggerKey",
      "Config": [
        {
          "Name": "GateWay-ArsGrpcWebApiService",
          "Version": "v1",

          //ServiceDiscovery获取host
          "Service": {
            "Name": "apigrpcwebapiservice",
            "Path": "/Api/ArsGrpcWebApi/swagger/v1/swagger.json"
          }
        }
      ],
      "TransformByOcelotConfig": false
    }
  ],

  "GlobalConfiguration": {
    "BaseUrl": "https://127.0.0.1:5225",
    "ServiceDiscoveryProvider": {
      "Scheme": "http",
      "Host": "127.0.0.1",
      "Port": 8500,
      "Type": "Consul"
    },
    "RateLimitOptions": {
      "DisableRateLimitHeaders": false,
      "QuotaExceededMessage": "rate limit", //速率限制发生时的提示信息
      "HttpStatusCode": 999, //速率限制发生时返回的状态
      "ClientIdHeader": "ars-ocelot-clientid" //白名单clientid放在这个header字段里面 {"ars-ocelot-clientid":"ars-ocelot-c1"}
    }
  }
}